----- Course Video DB ---------
-------------------------------------------------------------------

--- 1. Create Table
create table twitterVideo (
    tnum number not null,           -- video seq
    tsub varchar2(255) not null,    -- video subject
    turl varchar2(500) not null,    -- video youtube url
    primary key(tnum)
);

-- check the table structure
desc twitterVideo; 
-- delete the table
drop table twitterVideo purge;
-- list of table
select * from tab;

-- insert
insert into twitterVideo values
(1, '#1.1 Read this First', 'https://www.youtube.com/embed/DQ2AU6ELd4U');
insert into twitterVideo values
(2, '#1.2 Welcome!', 'https://www.youtube.com/embed/DQ2AU6ELd4U');
insert into twitterVideo values
(3, '#1.3 Requirements', 'https://www.youtube.com/embed/-3x-bxOK93w');
insert into twitterVideo values
(4, '#1.4 What is Firebase', 'https://www.youtube.com/embed/o4zO7T3VjV0');
insert into twitterVideo values
(5, '#1.5 When To Use Firebase', 'https://www.youtube.com/embed/dVz3OVMRQaY');
insert into twitterVideo values
(6, '#1.6 Pricing in Firebase', 'https://www.youtube.com/embed/saNerws8q2k');


-- select
select * from twitterVideo;

--select by seq
select * from twitterVideo where tnum=1;

-- delete data
delete twitterVideo where tnum=4;
delete twitterVideo;

-- commit
commit;

-------------------------------------------------------------------
--- 1. Create Table
create table vanillaVideo (
    vnum number not null,           -- video seq
    vsub varchar2(255) not null,    -- video subject
    vurl varchar2(500) not null,    -- video youtube url
    primary key(vnum)
);

-- check the table structure
desc vanillaVideo; 
-- delete the table
drop table vanillaVideo purge;
-- list of table
select * from tab;

-- insert
insert into vanillaVideo values
(1, '#1.1 2021 Update Anouncements', 'https://www.youtube.com/embed/rfICvBrPjV8');
insert into vanillaVideo values
(2, '#1.2 Welcome', 'https://www.youtube.com/embed/rfICvBrPjV8');
insert into vanillaVideo values
(3, '#1.3 What are we building', 'https://www.youtube.com/embed/a_jXokoY0q8');
insert into vanillaVideo values
(4, '#1.4 Requirements', 'https://www.youtube.com/embed/x152ocXmgT4');
insert into vanillaVideo values
(5, '#1.5 Software Requirements', 'https://www.youtube.com/embed/D818Qsq0KjQ');
insert into vanillaVideo values
(6, '#1.6 Why JS', 'https://www.youtube.com/embed/7GQcA9spIQs');
insert into vanillaVideo values
(7, '#1.7 Why JS 2', 'https://www.youtube.com/embed/x2oiZkzL0Cs');
insert into vanillaVideo values
(8, '#1.8 Online IDE', 'https://www.youtube.com/embed/GJ1dExBd-7U');

-- select
select * from vanillaVideo;

--select by seq
select * from vanillaVideo where vnum=1;

-- delete data
delete vanillaVideoo where vnum=1;
delete vanillaVideo;

-- commit
commit;

-------------------------------------------------------------------

--- 1. Create Table
create table kakaoVideo (
    knum number not null,           -- video seq
    ksub varchar2(255) not null,    -- video subject
    kurl varchar2(500) not null,    -- video youtube url
    primary key(knum)
);

-- check the table structure
desc kakaoVideo; 
-- delete the table
drop table kakaoVideo purge;
-- list of table
select * from tab;

-- insert
insert into kakaoVideo values
(1, '#1.1 Read This First', 'https://www.youtube.com/embed/T0l6C6f6bEw');
insert into kakaoVideo values
(2, '#1.2 Welcome', 'https://www.youtube.com/embed/T0l6C6f6bEw');
insert into kakaoVideo values
(3, '#1.3 Software Requirements', 'https://www.youtube.com/embed/NFETSCJON2M');
insert into kakaoVideo values
(4, '#1.4 Join the Challenge', 'https://www.youtube.com/embed/BEVnxbxBqi8');
insert into kakaoVideo values
(5, '#1.5 What Makes a Website?', 'https://www.youtube.com/embed/Bor_CRWEIXo');
-- select
select * from kakaoVideo;

--select by seq
select * from kakaoVideo where knum=1;

-- delete data
delete kakaoVideo where knum=1;
delete kakaoVideo;

-- commit
commit;




-- community management table--------------------------------
create table community (
    seq number not null,                -- sequence
    id varchar2(30) not null,           -- id
    name varchar2(40) not null,         -- name
    subject varchar2(255) not null,     -- subject
    content varchar2(4000) not null,    -- content
    hit number default 0,               -- hit
    logtime date default sysdate,       -- logtime when it's written
    category varchar2(40) not null,     -- category
    primary key(seq)
);
-- check table structure
desc community; 
-- delete table
drop table community purge;
-- table list
select * from tab;
-- create sequence
create sequence seq_community nocache nocycle;
-- delete sequence
drop sequence seq_community;

-- insert data
insert into community values
(seq_community.nextval, 'hong@gmail.com', '�솉湲몃룞', '�옒�궡�옄', '�굹�뒗 �삤�뒛�룄 諛쒖쟾�븳�떎.', 0, sysdate, 'javascript');
insert into community values
(seq_community.nextval, 'fulfeel2@gmail.com', '��鍮�', '�삤�뒛�븯猷�', '利먯퐫�뵫', 5, sysdate, 'javascript');

-- check all
select * from community;
select * from member;

-- check specific one by sequence
select * from community where seq=3;
-- check the count of the all board of community
select count(*) as cnt from community;

-- delete data by sequence
delete community where seq=3;
delete community;

-- hit up
update community set hit=hit+1 where seq=3;

-- DB commit
commit;

----------------Member SQL-------------------

--- 1. Create Table
create table member (
    name varchar2(30) not null,     -- name(nickname)
    id varchar2(30) primary key,    -- id
    pwd varchar2(30) not null,      -- password
    pic blob,                       -- picture
    logtime date,                   -- create member date
    twitterEnroll number default 0,  -- twitter lecture => unenrolled:0, enrolled:1
    vanillaEnroll number default 0  -- vanilla lecture => unenrolled:0, enrolled:1
);

-- 2. Check Table Description
desc member;
-- 3. Delete Table
drop table member purge;
-- Table List
select * from tab;
-- 1) Data Appending into the Table
insert into member values('honggildong', 'hong@gmail.com', '1234', EMPTY_BLOB(), sysdate, 0, 0);
insert into member values('fullbit', 'fulfeel2@gmail.com', '1234', EMPTY_BLOB(), sysdate, 0, 0);

-- 2) Data Searching
select * from member;
select * from member where id='hong@gmail.com';
select twitterEnroll from member where id='hong@gmail.com';
select vanillaEnroll from member where id='hong@gmail.com';
select * from member where id='hong@gmail.com' and pwd='1234';
SELECT * FROM
    (SELECT ROWNUM rn, tt.* FROM
        (SELECT * FROM member ORDER BY name ASC) 
    tt)
WHERE rn>=1 and rn<=5;

-- 3) Modify Data
update member set tel2='5555' where id='hong@gmail.com';

-- 3-1) Modify Data2
UPDATE member SET pwd='1111' where id='hong@gmail.com';

-- 3-2) twitterEnroll Data
update member set twitterEnroll=1 where id='hong@gmail.com';

-- 4) Delete Data
delete member where id='hong@gmail.com';

-- 5) Commit
commit;

